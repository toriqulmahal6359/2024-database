;WITH EXP_CTE AS (	SELECT  EX.P_ID , EX.EPOSITION, EX.EFROM, EX.ETO, EX.Company, EX.SERVE_TILL	, ROW_NUMBER() OVER ( PARTITION BY EX.P_ID ORDER BY EX.EFROM DESC) AS R	, EX.BUSINESS	FROM  EXP EX WITH (NOLOCK)	WHERE  EX.P_ID = 26496), Edu_CTE AS (		SELECT E.P_ID,  E.Edulevel, CAST(E.Edulevel AS varchar(1))+E.EDUCATION AS EDUCATIONS, CAST(E.Edulevel AS varchar(1))+E.INSTITUTE AS INSTITUTES		, HE.MaxDegree, E.SM_View , E.EDUCATION, E.INSTITUTE, E.SUBJECT, E.PASSING_YEAR, E.RESULT, E.PERCENT_MARK, E.GRADE_SCALE,  E.F_INSTITUTE		FROM EDU E WITH (NOLOCK)		INNER JOIN vMaxEduLevel HE WITH (NOLOCK) ON E.P_ID = HE.P_ID		WHERE E.P_ID = 26496), FInal_Edu AS (	SELECT P_ID, STRING_AGG(EDUCATIONS, ' || ') AS EDUCATIONS, STRING_AGG(INSTITUTES, ' || ') AS INSTITUTES, CASE WHEN 1 IN (SELECT F_INSTITUTE FROM Edu_CTE) THEN 1 ELSE 0 END F_INSTITUTE
	FROM Edu_CTE 
	GROUP BY P_ID)SELECT DISTINCT	P.ID, P.Name, P.E_MAIL1, P.MOBILE, P.HOME_PHONE, P.Birth, P.UPDATED_DATE, P.PhotoName, P.CUR_SAL,P.EXP_SAL, P.GLOBAL_VIEW	, P.UPDATED , U.TExp, U.TotalPoint--, RF.FileType	, CASE WHEN RP.RankPoint IS NULL THEN 0 ELSE RP.RankPoint END As RankPoint	, CASE WHEN VR.P_ID > 0 THEN 1 ELSE 0 END As VDOCV	, E.EDUCATIONS, E.INSTITUTES, E.F_INSTITUTE, CAST(AD.CountryID AS varchar(10))+' || '+CAST(AD.DistrictID AS varchar(10))+' || '+CAST(AD.ThanaID AS varchar(10)) AS PresentAddress	, CAST(PD.CountryID AS varchar(10))+' || '+CAST(PD.DistrictID AS varchar(10))+' || '+CAST(PD.ThanaID AS varchar(10)) AS PermanentAddress,REPLACE(P.PREF_JOB_LOCATION, ',', ' || ') AS PREF_JOB_LOCATION	,(		SELECT EX.EPOSITION, EX.EFROM, EX.Company--, EX.ETO		, CASE WHEN EX.SERVE_TILL = 1 THEN '(Continue)'			ELSE				(CASE  WHEN (DATEDIFF(MONTH, EX.EFROM, EX.ETO))/12 > 0 THEN CAST((DATEDIFF(MONTH, EX.EFROM, EX.ETO))/12 AS varchar(20)) + ' years' ELSE '1 year' END) 				+', '+				(CASE WHEN (DATEDIFF(MONTH, EX.EFROM, EX.ETO))%12 > 0 THEN CAST((DATEDIFF(MONTH, EX.EFROM, EX.ETO))%12 AS varchar(20)) + ' Mont' ELSE '1 Month' END)		END AS ServicePeriod		FROM  EXP_CTE EX WITH (NOLOCK)		WHERE P.ID = EX.P_ID AND EX.R < 3		FOR JSON AUTO, INCLUDE_NULL_VALUES	) Experience,	(		SELECT CASE WHEN E.MonthOfExp = -1 THEN SKILL_ID END AS SKILL_ID, CASE WHEN E.MonthOfExp = -1 THEN SkillName END AS SkillName		, CASE WHEN E.MonthOfExp > -1 THEN SKILL_ID END AS Exp_ID, CASE WHEN E.MonthOfExp > -1 THEN SkillName END AS ExpName		FROM vUserSkill_Exp E		WHERE P.ID = E.P_ID		FOR JSON AUTO, INCLUDE_NULL_VALUES	) AS SkillWorkArea	,(		SELECT DISTINCT E.EDUCATION, E.INSTITUTE, E.SM_View--, E.SUBJECT, E.PASSING_YEAR, E.RESULT, E.PERCENT_MARK, E.GRADE_SCALE, E.Edulevel, E.SM_View		FROM EDU E WITH (NOLOCK)		WHERE P.ID = E.P_ID --AND  E.SM_View = 1		FOR JSON AUTO, INCLUDE_NULL_VALUES	) AS EducationInfoFROM PERSONAL P WITH (NOLOCK)INNER JOIN UserSummary U WITH (NOLOCK) ON P.ID = U.P_IDLEFT JOIN EXP_CTE EX WITH (NOLOCK) ON  P.ID = EX.P_ID --AND EX.R < 3LEFT JOIN FInal_Edu E WITH (NOLOCK) ON  P.ID = E.P_ID --AND E.F_INSTITUTE <> ''--LEFT JOIN bdjResumeFiles..ResumeFiles As RF WITH (NOLOCK) on P.ID = RF.P_IDLEFT JOIN CVRanking_Points RP WITH (NOLOCK) ON  P.ID =RP.P_ID LEFT JOIN bdjResumes.vdo.VideoResumes as VR WITH (NOLOCK) on P.ID = VR.P_ID And VR.AllowToShow = 1 LEFT JOIN  UserAddress AD  WITH (NOLOCK) ON  P.ID = AD.P_ID AND AD.AddressType in (1,3)LEFT JOIN  UserAddress PD  WITH (NOLOCK) ON  P.ID = PD.P_ID AND PD.AddressType in (2,3)WHERE P.ID = 26496GROUP BY P.ID, P.Name, P.E_MAIL1, P.MOBILE, P.HOME_PHONE, P.Birth, P.UPDATED_DATE, P.PhotoName, P.CUR_SAL,P.EXP_SAL, P.GLOBAL_VIEW	, P.UPDATED , U.TExp, U.TotalPoint--, RF.FileType	, CASE WHEN RP.RankPoint IS NULL THEN 0 ELSE RP.RankPoint END	, CASE WHEN VR.P_ID > 0 THEN 1 ELSE 0 END, E.EDUCATIONS, E.INSTITUTES, E.F_INSTITUTE, CAST(PD.CountryID AS varchar(10))+' || '+CAST(PD.DistrictID AS varchar(10))+' || '+CAST(PD.ThanaID AS varchar(10))	, CAST(AD.CountryID AS varchar(10))+' || '+CAST(AD.DistrictID AS varchar(10))+' || '+CAST(AD.ThanaID AS varchar(10)), REPLACE(P.PREF_JOB_LOCATION, ',', ' || ')--SELECT * FROM UserAddress WHERE AddressType IN (2, 3)