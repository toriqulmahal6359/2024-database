create table #temp(CP_ID int,JP_ID int,T_apply int,J_apply int)with jobCTE2 AS (	SELECT jp.CP_ID, j.JP_ID,J.ApplyId	FROM bdjCorporate..DBO_JOBPOSTINGS AS jp	INNER JOIN 	bdjCorporate..DBO_JOB_INBOX AS j ON j.JP_ID = jp.JP_ID	--INNER JOIN bdjCorporate.rp.ApplicantProcess AS rp ON j.ApplyId = rp.ApplyId AND rp.LevelStatus = 1	WHERE jp.PublishDate >= '01/01/2021' and jp.PublishDate < '02/01/2021'	UNION	SELECT jp.CP_ID, j.JP_ID, J.ApplyId	FROM arcCorporate..DBO_JOBPOSTINGS_arc AS jp 	INNER JOIN arcCorporate..DBO_JOB_INBOX_arc AS j ON j.JP_ID = jp.JP_ID	--INNER JOIN arcCorporate.rp.ApplicantProcess_arc AS rp ON j.ApplyId = rp.ApplyId AND rp.LevelStatus = 1	WHERE jp.PublishDate >= '01/01/2021' and jp.PublishDate < '02/01/2021') ,tj as(select CP_ID, COUNT(JP_ID) as T_JOB from jobCTE2 group by CP_ID)insert into #temp(CP_ID,JP_ID,T_apply,J_apply)select j.CP_ID,j.JP_ID,COUNT(APPLYID) as Tapply,tj.T_JOB as T_JOB from jobCTE2 jinner join tj on j.CP_ID=tj.CP_IDgroup by j.CP_ID,j.JP_ID,tj.T_JOB WITH jobCTE AS (	SELECT jp.CP_ID, rp.UpdatedOn,rp.ApplyId,j.Score	FROM bdjCorporate..DBO_JOBPOSTINGS AS jp	INNER JOIN 	bdjCorporate..DBO_JOB_INBOX AS j ON j.JP_ID = jp.JP_ID	INNER JOIN bdjCorporate.rp.ApplicantProcess AS rp ON j.ApplyId = rp.ApplyId AND rp.LevelStatus = 1	WHERE rp.UpdatedOn >= '01/01/2021' and rp.UpdatedOn < '02/01/2021'	UNION	SELECT jp.CP_ID, rp.UpdatedOn,rp.ApplyId,j.Score	FROM arcCorporate..DBO_JOBPOSTINGS_arc AS jp 	INNER JOIN arcCorporate..DBO_JOB_INBOX_arc AS j ON j.JP_ID = jp.JP_ID	INNER JOIN arcCorporate.rp.ApplicantProcess_arc AS rp ON j.ApplyId = rp.ApplyId AND rp.LevelStatus = 1	WHERE rp.UpdatedOn >= '01/01/2021' and rp.UpdatedOn < '02/01/2021')SELECT j.[CP_ID],max(j.UpdatedOn) max_date,f.T_apply,f.J_apply,	COUNT(j.ApplyId) AS [Total Applicant_shorlist],	COUNT(CASE WHEN j.Score <= 50 THEN j.ApplyId END) AS [less_50%_total_applicant_count],	COUNT(CASE WHEN j.Score >= 51 AND j.Score <= 60 THEN j.ApplyId END) AS [51% to 60%_total_applicant_count],	COUNT(CASE WHEN j.Score >= 61 AND j.Score <= 70 THEN j.ApplyId END) AS [61% to 70%_total_applicant_count],	COUNT(CASE WHEN j.Score >= 71 AND j.Score <= 80 THEN j.ApplyId END) AS [71% to 80%_total_applicant_count],	COUNT(CASE WHEN j.Score >= 81 AND j.Score <= 90 THEN j.ApplyId END) AS [81% to 90%_total_applicant_count],	COUNT(CASE WHEN j.Score >= 91 AND j.Score <= 100 THEN j.ApplyId END) AS [91% to 100%_total_applicant_count]FROM jobCTE AS jinner join #temp f on  j.CP_ID = f.CP_IDGROUP BY j.[CP_ID],f.T_apply,f.J_apply